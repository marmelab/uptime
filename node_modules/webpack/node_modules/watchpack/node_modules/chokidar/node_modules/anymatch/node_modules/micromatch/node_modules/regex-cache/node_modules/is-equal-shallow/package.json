{
  "name": "is-equal-shallow",
  "description": "Does a shallow comparison of two objects, returning false if the keys or values differ.",
  "version": "0.1.2",
  "homepage": "https://github.com/jonschlinkert/is-equal-shallow",
  "author": {
    "name": "Jon Schlinkert",
    "url": "https://github.com/jonschlinkert"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/jonschlinkert/is-equal-shallow.git"
  },
  "bugs": {
    "url": "https://github.com/jonschlinkert/is-equal-shallow/issues"
  },
  "license": {
    "type": "MIT",
    "url": "https://github.com/jonschlinkert/is-equal-shallow/blob/master/LICENSE"
  },
  "files": [
    "index.js"
  ],
  "main": "index.js",
  "engines": {
    "node": ">=0.10.0"
  },
  "scripts": {
    "test": "mocha"
  },
  "dependencies": {
    "is-primitive": "^1.0.0"
  },
  "devDependencies": {
    "mocha": "*",
    "should": "*"
  },
  "keywords": [
    "compare",
    "comparison",
    "equal",
    "equals",
    "is",
    "is-equal",
    "key",
    "object",
    "same",
    "shallow",
    "value"
  ],
  "readme": "# is-equal-shallow [![NPM version](https://badge.fury.io/js/is-equal-shallow.svg)](http://badge.fury.io/js/is-equal-shallow)  [![Build Status](https://travis-ci.org/jonschlinkert/is-equal-shallow.svg)](https://travis-ci.org/jonschlinkert/is-equal-shallow) \n\n> Does a shallow comparison of two objects, returning false if the keys or values differ.\n\nThe purpose of this lib is to do the fastest comparison possible of two objects when the values will predictably be primitives. \n\n- only compares objects.\n- only compares the first level of each object\n- values must be primitives. If a value is not a primitive, even if the values are the same, `false` is returned.\n\n## Install with [npm](npmjs.org)\n\n```bash\nnpm i is-equal-shallow --save\n```\n\n\n## Usage\n\n```js\nvar equals = require('is-equal-shallow');\nequals(object_a, object_b);\n```\n\n**Examples**\n\n```js\nequals({a: true, b: true}, {a: true, b: true});\n//=> 'true'\n\nequals({a: true, b: false}, {c: false, b: false});\n//=> 'false'\n\nequals({a: true, b: false}, {a: false, b: false});\n//=> 'false'\n```\n\nStrict comparison for equality:\n\n```js\nequals({a: true, b: true}, {a: true, b: 'true'});\n//=> 'false'\n```\n\nWhen values are not primitives, `false` is always returned:\n\n```js\nequals({ b: {}}, { b: {}});\n//=> 'false'\n\nequals({ b: []}, { b: []});\n//=> 'false'\n```\n\n\n## Run tests\n\nInstall dev dependencies:\n\n```bash\nnpm i -d && npm test\n```\n\n## Contributing\nPull requests and stars are always welcome. For bugs and feature requests, [please create an issue](https://github.com/jonschlinkert/is-equal-shallow/issues)\n\n## Author\n\n**Jon Schlinkert**\n \n+ [github/jonschlinkert](https://github.com/jonschlinkert)\n+ [twitter/jonschlinkert](http://twitter.com/jonschlinkert) \n\n## License\nCopyright (c) 2015 Jon Schlinkert  \nReleased under the MIT license\n\n***\n\n_This file was generated by [verb](https://github.com/assemble/verb) on February 25, 2015._\n",
  "readmeFilename": "README.md",
  "_id": "is-equal-shallow@0.1.2",
  "_from": "is-equal-shallow@^0.1.1"
}
